# the macro's here are used to instead of the default cartographer console commands. 
# this is due to the camera using too much usb bus bandwidth. when calibrating with the camera enabled on the stock board theres a very high chance of the mcu crashing or timing out.
# credits to ShimaYT, Destinal, BootyEngineer and Zarboz <3

[gcode_shell_command cam-stop]                                                   # define camera stop script refferenced below
command: /etc/init.d/S50webcam stop                                              # kills creality webcam
timeout:4                                                                        # waits 4 seconds to ensure the command worked before timing it out
verbose: false                                                                   # shows results of command in klipper console - set to false once working 

[gcode_shell_command cam-start]                                                  # starts creality webcam
command: /etc/init.d/S50webcam start
timeout: 4                                                                       # waits 4 seconds to ensure the command worked before timing it out
verbose: false                                                                   # shows results of command in klipper console - set to false once working 

[gcode_macro STOP_CAMERA]
description: calibrate cartographer backlash without crashing
gcode:
    RUN_SHELL_COMMAND CMD=cam-stop
    {action_respond_info("Camera Stopped For Probing")}                        # notify user of camera state

[gcode_macro START_CAMERA]
description: calibrate cartographer backlash without crashing
gcode:
    RUN_SHELL_COMMAND CMD=cam-start
    {action_respond_info("Camera re-started!")}                                # notify user of camera state

[gcode_macro CARTO_ESTIMATE_BACKLASH]
description: calibrate cartographer backlash without crashing
gcode:
     G28                                                                        # home axis required
     STOP_CAMERA
     {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
     {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
     G1 X{POSITION_X} Y{POSITION_Y} F6000                                       # moves print head to center of bed
     CARTOGRAPHER_ESTIMATE_BACKLASH                                             # do z backlash command
     START_CAMERA

[gcode_macro CARTO_PROBE_ACCURACY]
description: test zprobe accuracy without crashing.
gcode:
     G28                                                                         # home axis required
     STOP_CAMERA
     {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
     {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
     G1 X{POSITION_X} Y{POSITION_Y} F6000                                       # moves print head to center of bed
     PROBE_ACCURACY                                                             # test probe accuracy
     START_CAMERA


[gcode_macro CARTO_CALIBRATE]
description: calibrate initial Z offset without crashing mcu.
gcode:
     G28 X Y                                                                    # home the X Y 
     STOP_CAMERA
     G90                                                                        # sets position to absolute
     {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
     {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
     G1 X{POSITION_X} Y{POSITION_Y} F6000                                       # moves print head to center of bed
     {action_respond_info("Waiting for bed temperature to hit 60c")}            # notify user to wait before continuing
     M190 S60                                                                   # wait for bed temperature before next step
     {action_respond_info("Ready to calibrate!")}                               # notify user ready to calibrate!
     {action_respond_info("You need to run START_CAMERA on competion")}            # remind user to manually re-start the camera
     CARTOGRAPHER_CALIBRATE                                                     # calibrate Initial Z command. 


[gcode_macro carto_bed_mesh]
description: stops the camera to mesh the bed then restarts
gcode:
    STOP_CAMERA
    G4 P1000                                                                        # wait required to allow the camera services to close
    BED_MESH_CLEAR                                                                  # clear current mesh
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant meshing
    SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=25   # drop accels to prevent hyper agressive meshing
    BED_MESH_CALIBRATE                                                              # start bedmesh calibrate
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant mesh calculation
    SET_VELOCITY_LIMIT ACCEL=20000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=5    # raise accels back to stock machine standard speeds.
    START_CAMERA

[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
gcode:
    STOP_CAMERA
    _SCREWS_TILT_CALCULATE
    START_CAMERA
