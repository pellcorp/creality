[gcode_macro _SENSORLESS_PARAMS]
variable_homing_current: 1.5
variable_safe_z: 3
# force move for homing after M84 or power off
variable_force_move: True
# move to centre after homing XY
variable_move_centre: True
gcode:

[force_move]
enable_force_move: true

# thanks to zarboz for the original configs and shima for editing to speed up and make more universal to creality printers :)
[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    {% set cartographer = ('cartographer' in printer.configfile.settings) %}
    {% set scanner = ('scanner' in printer.configfile.settings) %}
    {% set btteddy = ('probe_eddy_current btt_eddy' in printer.configfile.settings) %}
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
    {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
    {% set safe_z = printer["gcode_macro _SENSORLESS_PARAMS"].safe_z|int %}
    {% set force_move = printer["gcode_macro _SENSORLESS_PARAMS"].force_move %}
    {% set move_centre = printer["gcode_macro _SENSORLESS_PARAMS"].move_centre %}
    
    {% if cartographer and (home_all or 'Z' in params) and camera_started %}
        STOP_CAMERA
    {% endif %}
    G90
    
    # where motors were turned off or printer power cycled / klipper restarted
    {% if home_all or 'X' in params or 'Y' in params %}
        # I mean technically z_moved is never going to be 0 where position > safe_z, its a rather pointless test
        {% if printer.toolhead.homed_axes != "xyz" and force_move %}
            RESPOND TYPE=command MSG='Force moving Z {safe_z} mm distance'
            # for whatever reason we need to do a tiny little move first, followed by the real move
            # otherwise the stepper would not move at all.

            # WARNING - multi-z this needs to be disabled
            FORCE_MOVE STEPPER=stepper_z DISTANCE=0.1 VELOCITY=5 ACCEL=5
            FORCE_MOVE STEPPER=stepper_z DISTANCE={safe_z - 0.1} VELOCITY=5 ACCEL=5
        {% else %}
            G0 Z{safe_z} F600
        {% endif %}
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}
    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    {% if cartographer or scanner or btteddy %}
        # the duplication of these conditions is intentional
        {% if home_all or 'X' in params %}
        _HOME_X
        {% endif %}
        {% if home_all or 'Y' in params %}
        _HOME_Y
        {% endif %}
    {% endif %}
    {% if home_all or 'Z' in params %}
        _HOME_Z
    {% endif %}

    {% if move_centre and 'Z' not in params and 'X' in params and 'Y' in params %}
        G90
        G0 X{POSITION_X} Y{POSITION_Y} F2800
    {% endif %}

    {% if cartographer and (home_all or 'Z' in params) and camera_started %}
        START_CAMERA
    {% endif %}

[gcode_macro _HOME_X]
gcode:
    {% set cartographer = ('cartographer' in printer.configfile.settings) %}
    {% set scanner = ('scanner' in printer.configfile.settings) %}
    {% set btteddy = ('probe_eddy_current btt_eddy' in printer.configfile.settings) %}
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOMING_CURRENT = printer["gcode_macro _SENSORLESS_PARAMS"].homing_current %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}
    {% if not cartographer and not scanner and not btteddy %}
        G1 Z10 F1200
    {% endif %}

    G28 X

    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
[gcode_macro _HOME_Z]
gcode:

    {% set cartographer = ('cartographer' in printer.configfile.settings) %}
    {% set scanner = ('scanner' in printer.configfile.settings) %}
    {% set btteddy = ('probe_eddy_current btt_eddy' in printer.configfile.settings) %}
    {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
    {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    G90
    # Always use consistent run_current on A/B steppers during sensorless homing
    G0 X{POSITION_X} Y{POSITION_Y} F2800
    {% if cartographer and camera_started %}
        STOP_CAMERA
    {% endif %}

    G28 Z

    G90
    {% if cartographer and camera_started %}
        START_CAMERA
    {% endif %}
    
    G1 Z10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

[gcode_macro _HOME_Y]
gcode:
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOMING_CURRENT = printer["gcode_macro _SENSORLESS_PARAMS"].homing_current %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOMING_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOMING_CURRENT}

    G28 Y

    # Move away
    G91
    G1 Y+10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
