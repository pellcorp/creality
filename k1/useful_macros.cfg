[gcode_macro PID_CALIBRATE_BED]
description: Bed Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(65)}


[gcode_macro PID_CALIBRATE_HOTEND]
description: Hotend Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(230)}


# https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    M104 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_START"] != null %}
            _SAF_HEATING_NOZZLE_START
        {% endif %}

        RESPOND TYPE=command MSG='Waiting for nozzle temp to reach {s}c'
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}

        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_END"] != null %}
            _SAF_HEATING_NOZZLE_END
        {% endif %}
    {% endif %}


[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set s = params.S|float %}
    M140 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_BED_START"] != null %}
            _SAF_HEATING_BED_START
        {% endif %}

        RESPOND TYPE=command MSG='Waiting for bed temp to reach {s}c'
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)

        {% if printer["gcode_macro _SAF_HEATING_BED_END"] != null %}
            _SAF_HEATING_BED_END
        {% endif %}
    {% endif %}


# https://discord.com/channels/1154500511777693819/1172473583604346899
# https://github.com/Guilouz/Creality-Helper-Script/blob/main/files/macros/useful-macros.cfg
[gcode_macro WARMUP]
description: Stress Test
variable_maxd: 14142.14 ; = SQRT(2*maxy)
gcode:
  {% set min_loops = 2 %}
  {% set max_loops = params.LOOPS|default(3)|int %}
  {% if 'LOOPS' in params|upper %}
    {% if max_loops < min_loops %}
      {% set max_loops = min_loops %}
    {% endif %}
  {% endif %}
  {% set loop_cnt = max_loops %}
  {% set maxx = params.X_ACCEL_MAX|default(10000)|int %}
  {% set maxy = params.Y_ACCEL_MAX|default(10000)|int %}
  {% set max_x = (printer.toolhead.axis_maximum.x|int-5) %}
  {% set max_y = (printer.toolhead.axis_maximum.y|int-5) %}
  {% set loop_step_y = max_y//(loop_cnt-1) %}
  {% set loop_step_x = max_x//(loop_cnt-1) %}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for number in range(10,max_y+11,loop_step_y) %}
    {% if number >= max_y %}
      {% set number = max_y %}
    {% endif %}
    G1 F{maxy} X10 Y{number}
    G1 F{maxx} X{max_x} Y{number}
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxy} ACCEL_TO_DECEL={maxy/2}
  {% for number in range(10,max_x+11,loop_step_y) %}
    {% if number >= max_x %}
      {% set number = max_x %}
    {% endif %}
    G1 F{maxy} X{number} Y{max_y}
    G1 F{maxy} X{number} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxd} ACCEL_TO_DECEL={maxd/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxx} X10 Y10
    G1 F{maxd} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxd} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxy} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxx} X{max_x} Y{max_y}
    G1 F{maxy} X{max_x} Y10
    G1 F{maxx} X10 Y10
    G1 F{maxx} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
  {% endfor %}
  G1 X{x_park} Y{y_park} F30000


[gcode_shell_command beep]
command: aplay /usr/data/pellcorp/k1/files/empty.mp3
timeout: 2
verbose: False


[gcode_macro BEEP]
description: Play the beep sound
gcode:
  RUN_SHELL_COMMAND CMD=beep


[gcode_shell_command calibrate_shaper]
command: /usr/data/klipper/scripts/calibrate_shaper.py
timeout: 600.0
verbose: True


# a convenience macro so it shows up in fluidd and mainsail as a button
[gcode_macro INPUT_SHAPER]
description: Run shaper calibrate and choose default shapers
gcode:
    SHAPER_CALIBRATE


[gcode_macro INPUT_SHAPER_GRAPHS]
description: Generate Input Shaper Graphs
gcode:
  {% set x_png = params.X_PNG|default("/usr/data/printer_data/config/resonances_x.png") %}
  {% set y_png = params.Y_PNG|default("/usr/data/printer_data/config/resonances_y.png") %}

  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28  # home all axis
  {% endif %}

  # The different name means that guppy does not try to also generate graphs
  TEST_RESONANCES AXIS=X NAME=a
  M400

  # The different name means that guppy does not try to also generate graphs
  TEST_RESONANCES AXIS=Y NAME=b
  M400

  RUN_SHELL_COMMAND CMD=calibrate_shaper PARAMS="/usr/data/tmp/resonances_x_a.csv -o {x_png}"
  RUN_SHELL_COMMAND CMD=calibrate_shaper PARAMS="/usr/data/tmp/resonances_y_b.csv -o {y_png}"


# these macros are based on those from helper script but heavily modified to integrate
# with the fluidd / mainsail client macros
[gcode_macro _UNLOAD_FILAMENT]
variable_beep: True
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  M117 Unloading filament...
  M83
  G1 E10 F300
  G1 E-15 F3000
  G1 E-22.4700 F2400
  G1 E-6.4200 F1200
  G1 E-3.2100 F720
  G1 E5.0000 F356
  G1 E-5.0000 F384
  G1 E5.0000 F412
  G1 E-5.0000 F440
  G1 E5.0000 F467
  G1 E-5.0000 F495
  G1 E5.0000 F523
  G1 E-5.0000 F3000
  G1 E-15 F3000
  M400
  {% if beep %}
  BEEP
  BEEP
  {% endif %}


[gcode_macro _LOAD_FILAMENT]
variable_beep: True
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  M117 Loading filament...
  G91
  G1 E100 F180
  G90
  M400
  {% if beep %}
  BEEP
  {% endif %}


[gcode_macro _PURGE_MORE]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Purging filament..."
  G91
  G1 E10 F180
  G90
  M400

[gcode_macro M600]
description: Filament Change
gcode:
  RESPOND TYPE=command MSG="Print paused for filament change!"
  PAUSE
  _UNLOAD_FILAMENT
  M106 P0 S0
  M106 P2 S0
  RESPOND TYPE=command MSG="action:prompt_begin Filament change detected!"
  RESPOND TYPE=command MSG="action:prompt_text A necessary filament change has been detected. Please replace filament, LOAD it and click RESUME button."
  RESPOND TYPE=command MSG="action:prompt_button UNLOAD FILAMENT|_UNLOAD_FILAMENT|secondary"
  RESPOND TYPE=command MSG="action:prompt_button LOAD FILAMENT|_LOAD_FILAMENT|secondary"
  RESPOND TYPE=command MSG="action:prompt_button PURGE MORE FILAMENT|_PURGE_MORE|secondary"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|CANCEL_PRINT|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button IGNORE|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESUME|RESUME|primary"
  RESPOND TYPE=command MSG="action:prompt_show"
