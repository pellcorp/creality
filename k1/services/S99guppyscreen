#!/bin/sh

RC_DIR=/run/openrc
SUPERVISE_DAEMON=/usr/data/pellcorp/k1/fixes/respawn/supervise-daemon
GUPPYSCREEN=/usr/data/guppyscreen/guppyscreen
GUPPYSCREEN_LOG=/usr/data/printer_data/logs/guppyscreen.log
PID_FILE="/var/run/guppyscreen.pid"
SVC_NAME=guppyscreen

start_server() {
    # kill the boot display so it does not keep showing over top of guppyscreen
    killall boot_display 2> /dev/null
    # display black transition image to stop the corrupt image being shown
    cmd_jpeg_display /usr/data/pellcorp/k1/black.jpg &

    export HOME=/root
    sync && echo 3 > /proc/sys/vm/drop_caches
    mkdir -p $RC_DIR
    RC_SVCNAME=guppyscreen $SUPERVISE_DAEMON guppyscreen --start --stdout $GUPPYSCREEN_LOG --stderr $GUPPYSCREEN_LOG --pidfile $PID_FILE $GUPPYSCREEN
}

stop_server() {
    RC_SVCNAME=guppyscreen $SUPERVISE_DAEMON guppyscreen --stop --pidfile $PID_FILE > /dev/null 2>&1
}

case "$1" in
    start)
        start_server
        ;;
    stop)
        stop_server
        ;;
    restart|reload)
        stop_server
        # this allows a graceful restart of service by actually waiting for it to stop first
        service_pid="$(cat $PID_FILE 2> /dev/null)"
        if [ -n "$service_pid" ]; then
            while true; do
                    if [ ! -d /proc/"$service_pid" ] ; then
                        break
                    fi
            done
        fi
        start_server
        ;;
    *)
        echo "Usage:"
        echo "    $0 {start|stop|restart}"
        exit 1
esac

exit $?
