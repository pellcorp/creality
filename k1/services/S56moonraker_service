#!/bin/sh

#
# Moonraker Service
#

USER_DATA=/usr/data
PROG=/usr/data/moonraker-env/bin/python3
# the moonraker server is actually underneath the embedded moonraker directory in the moonraker repo
PY_SCRIPT=/usr/data/moonraker/moonraker/moonraker.py
PRINTER_DATA_DIR=$USER_DATA/printer_data
PRINTER_CONFIG_DIR=$PRINTER_DATA_DIR/config
PRINTER_LOGS_DIR=$PRINTER_DATA_DIR/logs
PID_FILE=/var/run/moonraker.pid

start() {
  [ -d $PRINTER_DATA_DIR ] || mkdir -p $PRINTER_DATA_DIR
  [ -d $PRINTER_CONFIG_DIR ] || mkdir -p $PRINTER_CONFIG_DIR
  [ -d $PRINTER_LOGS_DIR ] || mkdir -p $PRINTER_LOGS_DIR
  
  rm -rf /usr/data/tmp; mkdir -p /usr/data/tmp
  TMPDIR=/usr/data/tmp HOME=/root start-stop-daemon -S -q -b -m -p $PID_FILE \
    --exec $PROG -- $PY_SCRIPT -d $PRINTER_DATA_DIR
}

stop() {
  start-stop-daemon -K -q -p $PID_FILE
}

restart() {
  stop

  # this allows a graceful restart of moonraker by actually waiting for it to stop first
  moonraker_pid="$(cat $PID_FILE 2> /dev/null)"
  if [ -n "$moonraker_pid" ]; then
    while true; do
      if [ ! -d /proc/"$moonraker_pid" ] ; then
        break
      fi
    done
  fi

  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    restart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
