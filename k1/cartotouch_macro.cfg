[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
variable_stop_start_camera: False
gcode:
    {% set max_velocity = printer.toolhead.max_velocity %}
    {% set max_accel = printer.toolhead.max_accel %}
    {% set start_max_velocity = [printer["gcode_macro _START_END_PARAMS"].start_max_velocity, max_velocity]|min %}
    {% set start_max_accel = [printer["gcode_macro _START_END_PARAMS"].start_max_accel, max_accel]|min %}

    {% if printer["gcode_macro _SAF_BED_MESH_START"] != null %}
    _SAF_BED_MESH_START
    {% endif %}

    G4 P1000
    {% if stop_start_camera %}
        STOP_CAMERA
    {% endif %}
    G4 P500

    {% if max_velocity > start_max_velocity or max_accel > start_max_accel %}
        RESPOND TYPE=command MSG='Setting VELOCITY={start_max_velocity} (was {max_velocity}) ACCEL={start_max_accel} (was {max_accel})'
        SET_VELOCITY_LIMIT VELOCITY={start_max_velocity} ACCEL={start_max_accel}
    {% endif %}

    _BED_MESH_CALIBRATE {rawparams}

    {% if max_velocity > start_max_velocity or max_accel > start_max_accel %}
        RESPOND TYPE=command MSG='Restoring VELOCITY={max_velocity} ACCEL={max_accel}'
        SET_VELOCITY_LIMIT VELOCITY={max_velocity} ACCEL={max_accel}
    {% endif %}

    G4 P500
    {% if stop_start_camera %}
        START_CAMERA
    {% endif %}
    G4 P1000

    {% if printer["gcode_macro _SAF_BED_MESH_END"] != null %}
    _SAF_BED_MESH_END
    {% endif %}


[gcode_macro AXIS_TWIST_COMPENSATION_CALIBRATE]
rename_existing: _AXIS_TWIST_COMPENSATION_CALIBRATE
variable_stop_start_camera: True
gcode:
    {% if stop_start_camera %}
        STOP_CAMERA
    {% endif %}
    G4 P1000
    _AXIS_TWIST_COMPENSATION_CALIBRATE {rawparams}
    G4 P1000
    {% if stop_start_camera %}
        RESPOND TYPE=command MSG='You need to run START_CAMERA on completion'
    {% endif %}


[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
variable_stop_start_camera: True
gcode:
    {% if stop_start_camera %}
        STOP_CAMERA
    {% endif %}
    G4 P1000
    _SCREWS_TILT_CALCULATE {rawparams}
    G4 P1000
    {% if stop_start_camera %}
        START_CAMERA
    {% endif %}


[gcode_shell_command copy]
command: /bin/cp
timeout: 600.0
verbose: True


# https://tools.cartographer3d.com/touchtest/
[gcode_macro _TOUCH_TEST_DATA]
description: Collect data for touch test, can damage your plate if your printer is mis-calibrated
gcode:
    G28
    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    G1 Z-0.5 F120
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    G28
    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv
    G1 Z-0.5 F200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv

    G1 Z10 F200

    # FIXME - see if cartographer3d.com will accept a fix to CARTOGRAPHER_STREAM to specify fqn of data file
    RUN_SHELL_COMMAND CMD=copy PARAMS="/tmp/tapdata2mms.csv /usr/data/printer_data/config/"
    RUN_SHELL_COMMAND CMD=copy PARAMS="/tmp/tapdata3mms.csv /usr/data/printer_data/config/"
