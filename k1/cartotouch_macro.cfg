[gcode_macro CARTOGRAPHER_TOUCH]
rename_existing: _CARTOGRAPHER_TOUCH
gcode:
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% if camera_started %}
    STOP_CAMERA
    {% endif %}
    G4 P1000
    _CARTOGRAPHER_TOUCH {rawparams}
    G4 P1000
    {% if camera_started %}
    START_CAMERA
    {% endif %}


[gcode_macro CARTOGRAPHER_THRESHOLD_SCAN]
rename_existing: _CARTOGRAPHER_THRESHOLD_SCAN
gcode:
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% if camera_started %}
    STOP_CAMERA
    {% endif %}
    G4 P1000
    _CARTOGRAPHER_THRESHOLD_SCAN {rawparams}
    G4 P1000
    {% if camera_started %}
    START_CAMERA
    {% endif %}


[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
gcode:
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% if camera_started %}
    STOP_CAMERA
    {% endif %}
    G4 P1000
    _SCREWS_TILT_CALCULATE {rawparams}
    G4 P1000
    {% if camera_started %}
    START_CAMERA
    {% endif %}


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    G4 P1000
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% if camera_started %}
    STOP_CAMERA
    {% endif %}
    BED_MESH_CLEAR                                                                  # clear current mesh
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant meshing
    SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=25   # drop accels to prevent hyper agressive meshing
    _BED_MESH_CALIBRATE {rawparams}                                                 # start bedmesh calibrate
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant mesh calculation
    SET_VELOCITY_LIMIT ACCEL=20000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=5    # raise accels back to stock machine standard speeds.
    {% if camera_started %}
    START_CAMERA
    {% endif %}
    G4 P1000


[gcode_macro AXIS_TWIST_COMPENSATION_CALIBRATE]
rename_existing: _AXIS_TWIST_COMPENSATION_CALIBRATE
gcode:
    {% set camera_started = printer["gcode_macro START_CAMERA"].started|default(true) %}
    {% if camera_started %}
    STOP_CAMERA
    RESPOND TYPE=command MSG='You need to run START_CAMERA on completion'            # remind user to manually re-start the camera
    {% endif %}
    G4 P1000
    _AXIS_TWIST_COMPENSATION_CALIBRATE {rawparams}
    G4 P1000
