[gcode_macro PID_CALIBRATE_BED]
description: Bed Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(65)}


[gcode_macro PID_CALIBRATE_HOTEND]
description: Hotend Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(230)}


# https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    M104 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_START"] != null %}
            _SAF_HEATING_NOZZLE_START
        {% endif %}

        {% set current_temp = printer.extruder.temperature %}
        {% if current_temp < s or current_temp > s+1 %}
          RESPOND TYPE=command MSG='Waiting for nozzle temp to reach {s}c'
        {% endif %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}

        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_END"] != null %}
            _SAF_HEATING_NOZZLE_END
        {% endif %}
    {% endif %}


[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set s = params.S|float %}
    M140 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_BED_START"] != null %}
            _SAF_HEATING_BED_START
        {% endif %}

        {% set current_temp = printer.heater_bed.temperature %}
        {% if current_temp < s or current_temp > s+1 %}
          RESPOND TYPE=command MSG='Waiting for bed temp to reach {s}c'
        {% endif %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)

        {% if printer["gcode_macro _SAF_HEATING_BED_END"] != null %}
            _SAF_HEATING_BED_END
        {% endif %}
    {% endif %}


# a convenience macro so it shows up in fluidd and mainsail as a button
[gcode_macro INPUT_SHAPER]
description: Run shaper calibrate and choose default shapers
gcode:
    SHAPER_CALIBRATE


# these macros are based on those from helper script but heavily modified to integrate
# with the fluidd / mainsail client macros
[gcode_macro _UNLOAD_FILAMENT]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Unloading filament..."
  M83
  G1 E10 F300
  G1 E-15 F3000
  G1 E-22.4700 F2400
  G1 E-6.4200 F1200
  G1 E-3.2100 F720
  G1 E5.0000 F356
  G1 E-5.0000 F384
  G1 E5.0000 F412
  G1 E-5.0000 F440
  G1 E5.0000 F467
  G1 E-5.0000 F495
  G1 E5.0000 F523
  G1 E-5.0000 F3000
  G1 E-15 F3000
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP
  BEEP


[gcode_macro _UNLOAD_MORE]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Unloading filament..."
  M83
  G1 E-10 F180
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP


[gcode_macro _LOAD_FILAMENT]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Loading filament..."
  M83
  G1 E100 F180
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP


[gcode_macro _PURGE_MORE]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Purging filament..."
  M83
  G1 E10 F180
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP


[gcode_macro _FC_RESUME]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  RESUME


[gcode_macro _FC_CANCEL]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  CANCEL_PRINT


[gcode_macro M600]
description: Filament Change
gcode:
  RESPOND TYPE=command MSG="Print paused for filament change!"
  PAUSE RESTORE=0
  _UNLOAD_FILAMENT
  M106 P0 S0
  M106 P2 S0
  RESPOND TYPE=command MSG="action:prompt_begin Filament change detected!"
  RESPOND TYPE=command MSG="action:prompt_text A necessary filament change has been detected. Please replace filament, LOAD it and click RESUME button."
  RESPOND TYPE=command MSG="action:prompt_button UNLOAD FILAMENT|_UNLOAD_FILAMENT|secondary"
  RESPOND TYPE=command MSG="action:prompt_button UNLOAD MORE FILAMENT|_UNLOAD_MORE|secondary"
  RESPOND TYPE=command MSG="action:prompt_button LOAD FILAMENT|_LOAD_FILAMENT|secondary"
  RESPOND TYPE=command MSG="action:prompt_button PURGE MORE FILAMENT|_PURGE_MORE|secondary"
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|_FC_CANCEL|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button IGNORE|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESUME|_FC_RESUME|primary"
  RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _GUPPYSCREEN_EXTRUDE]
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
  {% set EXTRUDE_LEN = params.EXTRUDE_LEN|int %}
  {% set SPEED = params.SPEED|int %}
  {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
  SAVE_GCODE_STATE NAME=myMoveState
  {% if target_nozzle_temp < EXTRUDER_TEMP %}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  M83
  G1 E{EXTRUDE_LEN} F{SPEED}
  M400
  RESTORE_GCODE_STATE NAME=myMoveState

  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP
  {% if target_nozzle_temp != EXTRUDER_TEMP %}
    M109 S{target_nozzle_temp}
  {% endif %}


[gcode_macro _GUPPYSCREEN_RETRACT]
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
  {% set EXTRUDE_LEN = params.EXTRUDE_LEN|int %}
  {% set SPEED = params.SPEED|int %}
  {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
  SAVE_GCODE_STATE NAME=myMoveState
  {% if target_nozzle_temp < EXTRUDER_TEMP %}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  M83
  G1 E-{EXTRUDE_LEN} F{SPEED}
  M400
  RESTORE_GCODE_STATE NAME=myMoveState

  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP
  {% if target_nozzle_temp != EXTRUDER_TEMP %}
    M109 S{target_nozzle_temp}
  {% endif %}


[gcode_macro LOAD_FILAMENT]
variable_extruder_temp: 230
variable_extrude_len: 90
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(extruder_temp)|int %}
  {% set EXTRUDE_LEN = params.EXTRUDE_LEN|default(extrude_len)|int %}
  {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
  SAVE_GCODE_STATE NAME=myMoveState
  {% if target_nozzle_temp < EXTRUDER_TEMP %}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  M83
  G1 E{EXTRUDE_LEN} F180
  M400
  RESTORE_GCODE_STATE NAME=myMoveState

  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP
  {% if target_nozzle_temp != EXTRUDER_TEMP %}
    M109 S{target_nozzle_temp}
  {% endif %}


[gcode_macro UNLOAD_FILAMENT]
variable_extruder_temp: 230
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
  {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
  SAVE_GCODE_STATE NAME=myMoveState
  {% if target_nozzle_temp < EXTRUDER_TEMP %}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  M83
  G1 E20 F180
  G1 E-50 F180
  G1 E-30 F2000
  M400
  RESTORE_GCODE_STATE NAME=myMoveState

  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP
  {% if target_nozzle_temp != EXTRUDER_TEMP %}
    M109 S{target_nozzle_temp}
  {% endif %}
