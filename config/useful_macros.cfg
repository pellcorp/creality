[gcode_macro PID_CALIBRATE_BED]
description: Bed Pid Calibrate
gcode:
  {% if printer.print_stats.state != "printing" %}
    PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(65)}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}

[gcode_macro PID_CALIBRATE_HOTEND]
description: Hotend Pid Calibrate
gcode:
  {% if printer.print_stats.state != "printing" %}
    PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(230)}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}

# https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    M104 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_START"] != null %}
            _SAF_HEATING_NOZZLE_START
        {% endif %}

        {% set current_temp = printer.extruder.temperature %}
        {% if current_temp < s or current_temp > s+1 %}
          RESPOND TYPE=command MSG='Waiting for nozzle temp to reach {s}c'
        {% endif %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}

        {% if printer["gcode_macro _SAF_HEATING_NOZZLE_END"] != null %}
            _SAF_HEATING_NOZZLE_END
        {% endif %}
    {% endif %}


[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set s = params.S|float %}
    M140 S{s}

    {% if s != 0 %}
        {% if printer["gcode_macro _SAF_HEATING_BED_START"] != null %}
            _SAF_HEATING_BED_START
        {% endif %}

        {% set current_temp = printer.heater_bed.temperature %}
        {% if current_temp < s or current_temp > s+1 %}
          RESPOND TYPE=command MSG='Waiting for bed temp to reach {s}c'
        {% endif %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)

        {% if printer["gcode_macro _SAF_HEATING_BED_END"] != null %}
            _SAF_HEATING_BED_END
        {% endif %}
    {% endif %}


# a convenience macro so it shows up in fluidd and mainsail as a button
[gcode_macro INPUT_SHAPER]
description: Run shaper calibrate and choose default shapers
gcode:
  {% if printer.print_stats.state != "printing" %}
    {% set kinematics = printer.configfile.settings['printer'].kinematics %}
    {% set axis = params.AXIS | default('') | upper %}
    {% if kinematics != 'cartesian' or axis == 'X' or axis == 'Y' %}
      {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
      {% endif %}
      {% if axis != '' %}
        SHAPER_CALIBRATE AXIS={axis}
      {% else %}
        SHAPER_CALIBRATE
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG='You must specify an AXIS (X or Y)'
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}


# these macros are based on those from helper script but heavily modified to integrate
# with the fluidd / mainsail client macros
[gcode_macro _UNLOAD_FILAMENT]
gcode:
    M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
    RESPOND TYPE=command MSG="Unloading filament..."

    # Turn on cooling fan to help with temperature drop
    M106 S255
    
    M83

    #### K1* Unicorn Nozzle/Heatbreak/Extruder Geometry:
    ## pipe - heatbreak - pipe - nozzle
    ## 23.6 - 10.5      - 3    - 28.3 - total 65.4mm
    ### Positions:
    ## E-28.3 = unloaded from nozzle/heater
    ## E-36.55 = unloaded from nozzle/hb until middle of heatbreak
    ## E-42.3 = unloaded from nozzle and hb = between heatbreak and extruder drive gears, hand pullable with lever opened
    ## E-77.5 = unloaded from nozzle, hb and extruder = beyond extruder drive gears, hand pullable with lever closed

    #### CHCB-OTC on K1* Nozzle/Heatbreak/Extruder Geometry:
    ## pipe - heatbreak - pipe - nozzle
    ## (23.5 - 10.5      - 3    - 28.5 - total 65.5mm
    ### Positions:
    ## E-28.5 = unloaded from nozzle/heater
    ## E-36.75 = unloaded from nozzle/hb until middle of heatbreak
    ## E-42.5 = unloaded from nozzle and hb = between heatbreak and extruder drive gears, hand pullable with lever opened
    ## E-77.5 = unloaded from nozzle, hb and extruder = beyond extruder drive gears, hand pullable with lever closed

    RESPOND MSG="Begin unload filament and tip shape"
    M104 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int - 30}     # Start cooling (don't wait)
    G4 P5000                       # Wait for initial cooldown
    G1 E30 F180                    # initially purge larger due to nozzle length
    G1 E-12 F600                   # Medium retract -12
    G4 P1000                       # Wait
    G1 E4 F120                     # Small extrude -8
    G1 E-18 F1400                  # Fast retract -26
    G4 P500                        # Wait
    G1 E2 F90                      # Tiny extrude -24
    G1 E-24 F2200                  # Very fast retract -48
    G1 E-50 F2800                  # Final snap retract -98
      
    M400

    # turn off extruder to help it avoid overheating
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BEEP
    # we lowered by -30Â° before. restore already here to avoid heating at _LOAD_FILAMENT later
    M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}


[gcode_macro _LOAD_FILAMENT]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Loading filament..."
  M83
  G1 E100 F180
  _CLIENT_RETRACT
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP


[gcode_macro _PURGE_MORE]
gcode:
  M109 S{printer['gcode_macro RESUME'].last_extruder_temp.temp|int}
  RESPOND TYPE=command MSG="Purging filament..."
  M83
  G1 E10 F180
  _CLIENT_RETRACT
  M400
  # turn off extruder to help it avoid overheating
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  BEEP


[gcode_macro _FC_RESUME]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  RESUME


[gcode_macro _FC_CANCEL]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  CANCEL_PRINT


[gcode_macro M600]
description: Filament Change
gcode:
  RESPOND TYPE=command MSG="M600 - Print paused for filament change"
  PAUSE RESTORE=0
  RESPOND TYPE=command MSG="action:prompt_begin M600 - Filament Change - UNLOAD Filament"
  RESPOND TYPE=command MSG="action:prompt_text BEEP BEEP - Unloading Filament ..."
  RESPOND TYPE=command MSG="action:prompt_text ... ... ..."
  RESPOND TYPE=command MSG="action:prompt_text ... Please wait for BEEP."
  RESPOND TYPE=command MSG="action:prompt_show"
  BEEP
  BEEP
  _UNLOAD_FILAMENT
  M106 P0 S0
  M106 P2 S0
  RESPOND TYPE=command MSG="action:prompt_begin M600 - Filament Change - LOAD Filament"
  RESPOND TYPE=command MSG="action:prompt_text BEEP - Filament unloaded. Replace Filament, click LOAD, remove purged material and click RESUME when ready to continue print."
  RESPOND TYPE=command MSG="action:prompt_text  "
  RESPOND TYPE=command MSG="action:prompt_button LOAD Filament|_LOAD_FILAMENT|secondary"
  RESPOND TYPE=command MSG="action:prompt_button PURGE MORE Filament|_PURGE_MORE|secondary"
  RESPOND TYPE=command MSG="action:prompt_text  "
  RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|_FC_CANCEL|error"
  RESPOND TYPE=command MSG="action:prompt_footer_button IGNORE|RESPOND TYPE=command MSG=action:prompt_end|warning"
  RESPOND TYPE=command MSG="action:prompt_footer_button RESUME|_FC_RESUME|primary"
  RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _GUPPYSCREEN_EXTRUDE]
gcode:
  {% if printer.print_stats.state != "printing" %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
    {% set EXTRUDE_LEN = params.EXTRUDE_LEN|int %}
    {% set SPEED = params.SPEED|int %}
    {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
    SAVE_GCODE_STATE NAME=myMoveState
    {% if target_nozzle_temp < EXTRUDER_TEMP %}
      M109 S{EXTRUDER_TEMP}
    {% endif %}
    M83
    G1 E{EXTRUDE_LEN} F{SPEED}
    M400
    RESTORE_GCODE_STATE NAME=myMoveState

    # turn off extruder to help it avoid overheating
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BEEP
    {% if target_nozzle_temp != EXTRUDER_TEMP %}
      M109 S{target_nozzle_temp}
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}

[gcode_macro _GUPPYSCREEN_RETRACT]
gcode:
  {% if printer.print_stats.state != "printing" %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
    {% set EXTRUDE_LEN = params.EXTRUDE_LEN|int %}
    {% set SPEED = params.SPEED|int %}
    {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
    SAVE_GCODE_STATE NAME=myMoveState
    {% if target_nozzle_temp < EXTRUDER_TEMP %}
      M109 S{EXTRUDER_TEMP}
    {% endif %}
    M83
    G1 E-{EXTRUDE_LEN} F{SPEED}
    M400
    RESTORE_GCODE_STATE NAME=myMoveState

    # turn off extruder to help it avoid overheating
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BEEP
    {% if target_nozzle_temp != EXTRUDER_TEMP %}
      M109 S{target_nozzle_temp}
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_extruder_temp: 230
variable_extrude_len: 90
gcode:
  {% if printer.print_stats.state != "printing" %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(extruder_temp)|int %}
    {% set EXTRUDE_LEN = params.EXTRUDE_LEN|default(extrude_len)|int %}
    {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
    SAVE_GCODE_STATE NAME=myMoveState
    {% if target_nozzle_temp < EXTRUDER_TEMP %}
      M109 S{EXTRUDER_TEMP}
    {% endif %}
    M83
    G1 E{EXTRUDE_LEN} F180
    M400
    RESTORE_GCODE_STATE NAME=myMoveState

    # turn off extruder to help it avoid overheating
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BEEP
    {% if target_nozzle_temp != EXTRUDER_TEMP %}
      M109 S{target_nozzle_temp}
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
variable_extruder_temp: 230
gcode:
  {% if printer.print_stats.state != "printing" %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
    {% set target_nozzle_temp = printer[printer.toolhead.extruder].target %}
    SAVE_GCODE_STATE NAME=myMoveState
    {% if target_nozzle_temp < EXTRUDER_TEMP %}
      M109 S{EXTRUDER_TEMP}
    {% endif %}
    M83
    G1 E20 F180
    G1 E-50 F180
    G1 E-30 F2000
    M400
    RESTORE_GCODE_STATE NAME=myMoveState

    # turn off extruder to help it avoid overheating
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BEEP
    {% if target_nozzle_temp != EXTRUDER_TEMP %}
      M109 S{target_nozzle_temp}
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='Not available while printing'
  {% endif %}
